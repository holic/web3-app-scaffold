/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  MinimalForwarderRecipient,
  MinimalForwarderRecipientInterface,
} from "../MinimalForwarderRecipient";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "forwarderAddress_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    name: "isTrustedForwarder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "trustedForwarder_",
        type: "address",
      },
    ],
    name: "setForwarder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "versionRecipient",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161048238038061048283398101604081905261002f916100f1565b61003f61003a610064565b61009d565b600180546001600160a01b0319166001600160a01b0392909216919091179055610121565b6001546000906001600160a01b03163303610086575060131936013560601c90565b6100986100ed60201b6101cc1760201c565b905090565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b3390565b60006020828403121561010357600080fd5b81516001600160a01b038116811461011a57600080fd5b9392505050565b610352806101306000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063486ff0cd14610067578063572b6c0514610093578063715018a6146100c55780638da5cb5b146100cf578063b9998a24146100ea578063f2fde38b146100fd575b600080fd5b60408051808201825260018152603160f81b6020820152905161008a91906102c0565b60405180910390f35b6100b56100a1366004610315565b6001546001600160a01b0391821691161490565b604051901515815260200161008a565b6100cd610110565b005b6000546040516001600160a01b03909116815260200161008a565b6100cd6100f8366004610315565b610124565b6100cd61010b366004610315565b61014e565b6101186101d0565b6101226000610249565b565b61012c6101d0565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6101566101d0565b6001600160a01b0381166101c05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6101c981610249565b50565b3390565b6101d8610299565b6001600160a01b03166101f36000546001600160a01b031690565b6001600160a01b0316146101225760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101b7565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001546000906001600160a01b031633036102bb575060131936013560601c90565b503390565b600060208083528351808285015260005b818110156102ed578581018301518582016040015282016102d1565b818111156102ff576000604083870101525b50601f01601f1916929092016040019392505050565b60006020828403121561032757600080fd5b81356001600160a01b038116811461033e57600080fd5b939250505056fea164736f6c634300080d000a";

type MinimalForwarderRecipientConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MinimalForwarderRecipientConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MinimalForwarderRecipient__factory extends ContractFactory {
  constructor(...args: MinimalForwarderRecipientConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    forwarderAddress_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MinimalForwarderRecipient> {
    return super.deploy(
      forwarderAddress_,
      overrides || {}
    ) as Promise<MinimalForwarderRecipient>;
  }
  override getDeployTransaction(
    forwarderAddress_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(forwarderAddress_, overrides || {});
  }
  override attach(address: string): MinimalForwarderRecipient {
    return super.attach(address) as MinimalForwarderRecipient;
  }
  override connect(signer: Signer): MinimalForwarderRecipient__factory {
    return super.connect(signer) as MinimalForwarderRecipient__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MinimalForwarderRecipientInterface {
    return new utils.Interface(_abi) as MinimalForwarderRecipientInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MinimalForwarderRecipient {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MinimalForwarderRecipient;
  }
}

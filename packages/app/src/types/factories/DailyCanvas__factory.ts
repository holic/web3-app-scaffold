/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { DailyCanvas, DailyCanvasInterface } from "../DailyCanvas";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_size",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_end",
        type: "uint256",
      },
    ],
    name: "InvalidCodeAtRange",
    type: "error",
  },
  {
    inputs: [],
    name: "WriteError",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "canvasId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "pixels",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "author",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "promptId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "riffCanvasId",
        type: "uint256",
      },
    ],
    name: "CanvasDrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "promptId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "promptText",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "author",
        type: "address",
      },
    ],
    name: "NewPrompt",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "pixels",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "promptId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "riffCanvasId",
        type: "uint256",
      },
    ],
    name: "drawCanvas",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "canvasId",
        type: "uint256",
      },
    ],
    name: "getCanvasPixels",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "canvasId",
        type: "uint256",
      },
    ],
    name: "getCanvasRiffId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentPrompt",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentPromptId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "promptId",
        type: "uint256",
      },
    ],
    name: "getPrompt",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "canvasId",
        type: "uint256",
      },
    ],
    name: "getPromptByCanvasId",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "canvasId",
        type: "uint256",
      },
    ],
    name: "getTileSVG",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "promptText",
        type: "string",
      },
    ],
    name: "newPrompt",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "setRenderer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "canvasId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600980546001600160a01b03191673df01a4040493b514605392620b3a0a05eb8cd2951790553480156200003757600080fd5b50604080518082018252600681526543616e76617360d01b60208083019182528351808501909452600384526221a0a760e91b908401528151919291620000819160009162000110565b5080516200009790600190602084019062000110565b505050620000b4620000ae620000ba60201b60201c565b620000be565b620001f2565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200011e90620001b6565b90600052602060002090601f0160209004810192826200014257600085556200018d565b82601f106200015d57805160ff19168380011785556200018d565b828001600101855582156200018d579182015b828111156200018d57825182559160200191906001019062000170565b506200019b9291506200019f565b5090565b5b808211156200019b5760008155600101620001a0565b600181811c90821680620001cb57607f821691505b602082108103620001ec57634e487b7160e01b600052602260045260246000fd5b50919050565b61206380620002026000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c8063715018a6116100f9578063b88d4fde11610097578063cf73cdd211610071578063cf73cdd2146103ba578063d79d462d146103cd578063e985e9c5146103d5578063f2fde38b1461041157600080fd5b8063b88d4fde14610381578063c5b9c94814610394578063c87b56dd146103a757600080fd5b806395d89b41116100d357806395d89b4114610340578063a22cb46514610348578063aa7a296c1461035b578063b58aa05b1461036e57600080fd5b8063715018a61461031f5780638da5cb5b1461032757806392a51fcd1461033857600080fd5b80633307440d1161016657806342966c681161014057806342966c68146102d357806356d3163d146102e65780636352211e146102f957806370a082311461030c57600080fd5b80633307440d1461029a57806340d097c3146102ad57806342842e0e146102c057600080fd5b8063081812fc116101a2578063081812fc14610234578063095ea7b31461025f5780631f7da8a91461027457806323b872dd1461028757600080fd5b806301ffc9a7146101c9578063050dd3af146101f157806306fdde031461021f575b600080fd5b6101dc6101d736600461181d565b610424565b60405190151581526020015b60405180910390f35b6102116101ff36600461183a565b6000908152600e602052604090205490565b6040519081526020016101e8565b610227610476565b6040516101e891906118ab565b61024761024236600461183a565b610508565b6040516001600160a01b0390911681526020016101e8565b61027261026d3660046118da565b61052f565b005b610211610282366004611904565b610649565b610272610295366004611983565b61072f565b6102726102a8366004611a6c565b610761565b6102726102bb366004611ab5565b6107e6565b6102726102ce366004611983565b61080f565b6102726102e136600461183a565b61082a565b6102726102f4366004611ab5565b61085b565b61024761030736600461183a565b610885565b61021161031a366004611ab5565b6108e5565b61027261096b565b6006546001600160a01b0316610247565b61021161097f565b61022761098f565b610272610356366004611ad0565b61099e565b61022761036936600461183a565b6109a9565b61022761037c36600461183a565b610a3b565b61027261038f366004611b0c565b610aea565b6102276103a236600461183a565b610b22565b6102276103b536600461183a565b610b46565b6102276103c836600461183a565b610c4d565b610227610c6a565b6101dc6103e3366004611b88565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b61027261041f366004611ab5565b610c92565b60006001600160e01b031982166380ac58cd60e01b148061045557506001600160e01b03198216635b5e139f60e01b145b8061047057506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461048590611bbb565b80601f01602080910402602001604051908101604052809291908181526020018280546104b190611bbb565b80156104fe5780601f106104d3576101008083540402835291602001916104fe565b820191906000526020600020905b8154815290600101906020018083116104e157829003601f168201915b5050505050905090565b600061051382610d08565b506000908152600460205260409020546001600160a01b031690565b600061053a82610885565b9050806001600160a01b0316836001600160a01b0316036105ac5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806105c857506105c881336103e3565b61063a5760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c000060648201526084016105a3565b6106448383610d67565b505050565b6000610654336107e6565b600061065f60075490565b90506106a086868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610dd592505050565b6000828152600d6020908152604080832080546001600160a01b0319166001600160a01b039590951694909417909355600c8152828220879055600e9052819020849055517f3495c16dcb731f6effa69e54399c800498aa972748b03d8368185e249afa31319061071c9083908990899033908a908a90611bef565b60405180910390a190505b949350505050565b61073a335b82610e3a565b6107565760405162461bcd60e51b81526004016105a390611c44565b610644838383610eb8565b610769611054565b610777600880546001019055565b600061078260085490565b6000818152600b6020908152604090912084519293506107a692909185019061176e565b507f5bac0210f67e1925e0834dc92d04f88378f1756c39eddb236539e69956f8a2be8183336040516107da93929190611c92565b60405180910390a15050565b60006107f160075490565b9050610801600780546001019055565b61080b82826110ae565b5050565b61064483838360405180602001604052806000815250610aea565b61083333610734565b61084f5760405162461bcd60e51b81526004016105a390611c44565b610858816110c8565b50565b610863611054565b600980546001600160a01b0319166001600160a01b0392909216919091179055565b6000818152600260205260408120546001600160a01b0316806104705760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016105a3565b60006001600160a01b03821661094f5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016105a3565b506001600160a01b031660009081526003602052604090205490565b610973611054565b61097d6000611163565b565b600061098a60085490565b905090565b60606001805461048590611bbb565b61080b3383836111b5565b6009546000828152600d60205260409020546060916001600160a01b0390811691639e979452916109da9116611283565b6040518263ffffffff1660e01b81526004016109f691906118ab565b600060405180830381865afa158015610a13573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104709190810190611cc3565b6000818152600c60209081526040808320548352600b9091529020805460609190610a6590611bbb565b80601f0160208091040260200160405190810160405280929190818152602001828054610a9190611bbb565b8015610ade5780601f10610ab357610100808354040283529160200191610ade565b820191906000526020600020905b815481529060010190602001808311610ac157829003601f168201915b50505050509050919050565b610af43383610e3a565b610b105760405162461bcd60e51b81526004016105a390611c44565b610b1c84848484611293565b50505050565b6000818152600d6020526040902054606090610470906001600160a01b0316611283565b60408051808201909152601a81527f646174613a696d6167652f7376672b786d6c3b6261736536342c00000000000060208201526060908181610baf610b8b866109a9565b604051602001610b9b9190611d3a565b6040516020818303038152906040526112c6565b604051602001610bc0929190611d56565b60408051601f19818403018152908290526b4461696c792043616e76617360a01b60208301529250602c0160408051601f198184030181528282526000878152600e60209081529281205491945092610c2192610b9b928792909101611d85565b905080604051602001610c349190611e28565b60408051601f1981840301815291905295945050505050565b6000818152600b60205260409020805460609190610a6590611bbb565b6060600b6000610c7960085490565b8152602001908152602001600020805461048590611bbb565b610c9a611054565b6001600160a01b038116610cff5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105a3565b61085881611163565b6000818152600260205260409020546001600160a01b03166108585760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016105a3565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610d9c82610885565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610e0083604051602001610dec9190611e6d565b604051602081830303815290604052611419565b90508051602082016000f091506001600160a01b038216610e345760405163046a55db60e11b815260040160405180910390fd5b50919050565b600080610e4683610885565b9050806001600160a01b0316846001600160a01b03161480610e8d57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806107275750836001600160a01b0316610ea684610508565b6001600160a01b031614949350505050565b826001600160a01b0316610ecb82610885565b6001600160a01b031614610f2f5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016105a3565b6001600160a01b038216610f915760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016105a3565b610f9c600082610d67565b6001600160a01b0383166000908152600360205260408120805460019290610fc5908490611ea9565b90915550506001600160a01b0382166000908152600360205260408120805460019290610ff3908490611ec0565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6006546001600160a01b0316331461097d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105a3565b61080b828260405180602001604052806000815250611445565b60006110d382610885565b90506110e0600083610d67565b6001600160a01b0381166000908152600360205260408120805460019290611109908490611ea9565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b0316036112165760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016105a3565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6060610470826001600019611478565b61129e848484610eb8565b6112aa8484848461152e565b610b1c5760405162461bcd60e51b81526004016105a390611ed8565b606081516000036112e557505060408051602081019091526000815290565b600060405180606001604052806040815260200161201760409139905060006003845160026113149190611ec0565b61131e9190611f2a565b611329906004611f4c565b67ffffffffffffffff811115611341576113416119bf565b6040519080825280601f01601f19166020018201604052801561136b576020820181803683370190505b509050600182016020820185865187015b808210156113d7576003820191508151603f8160121c168501518453600184019350603f81600c1c168501518453600184019350603f8160061c168501518453600184019350603f811685015184535060018301925061137c565b50506003865106600181146113f357600281146114065761140e565b603d6001830353603d600283035361140e565b603d60018303535b509195945050505050565b606081518260405160200161142f929190611f6b565b6040516020818303038152906040529050919050565b61144f838361162c565b61145c600084848461152e565b6106445760405162461bcd60e51b81526004016105a390611ed8565b6060833b600081900361149b575050604080516020810190915260008152611527565b808411156114b9575050604080516020810190915260008152611527565b838310156114eb5760405163162544fd60e11b81526004810182905260248101859052604481018490526064016105a3565b83830384820360008282106115005782611502565b815b60408051603f8301601f19168101909152818152955090508087602087018a3c505050505b9392505050565b60006001600160a01b0384163b1561162457604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611572903390899088908890600401611fbc565b6020604051808303816000875af19250505080156115ad575060408051601f3d908101601f191682019092526115aa91810190611ff9565b60015b61160a573d8080156115db576040519150601f19603f3d011682016040523d82523d6000602084013e6115e0565b606091505b5080516000036116025760405162461bcd60e51b81526004016105a390611ed8565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610727565b506001610727565b6001600160a01b0382166116825760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016105a3565b6000818152600260205260409020546001600160a01b0316156116e75760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016105a3565b6001600160a01b0382166000908152600360205260408120805460019290611710908490611ec0565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b82805461177a90611bbb565b90600052602060002090601f01602090048101928261179c57600085556117e2565b82601f106117b557805160ff19168380011785556117e2565b828001600101855582156117e2579182015b828111156117e25782518255916020019190600101906117c7565b506117ee9291506117f2565b5090565b5b808211156117ee57600081556001016117f3565b6001600160e01b03198116811461085857600080fd5b60006020828403121561182f57600080fd5b813561152781611807565b60006020828403121561184c57600080fd5b5035919050565b60005b8381101561186e578181015183820152602001611856565b83811115610b1c5750506000910152565b60008151808452611897816020860160208601611853565b601f01601f19169290920160200192915050565b602081526000611527602083018461187f565b80356001600160a01b03811681146118d557600080fd5b919050565b600080604083850312156118ed57600080fd5b6118f6836118be565b946020939093013593505050565b6000806000806060858703121561191a57600080fd5b843567ffffffffffffffff8082111561193257600080fd5b818701915087601f83011261194657600080fd5b81358181111561195557600080fd5b88602082850101111561196757600080fd5b6020928301999098509187013596604001359550909350505050565b60008060006060848603121561199857600080fd5b6119a1846118be565b92506119af602085016118be565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156119fe576119fe6119bf565b604052919050565b600067ffffffffffffffff821115611a2057611a206119bf565b50601f01601f191660200190565b6000611a41611a3c84611a06565b6119d5565b9050828152838383011115611a5557600080fd5b828260208301376000602084830101529392505050565b600060208284031215611a7e57600080fd5b813567ffffffffffffffff811115611a9557600080fd5b8201601f81018413611aa657600080fd5b61072784823560208401611a2e565b600060208284031215611ac757600080fd5b611527826118be565b60008060408385031215611ae357600080fd5b611aec836118be565b915060208301358015158114611b0157600080fd5b809150509250929050565b60008060008060808587031215611b2257600080fd5b611b2b856118be565b9350611b39602086016118be565b925060408501359150606085013567ffffffffffffffff811115611b5c57600080fd5b8501601f81018713611b6d57600080fd5b611b7c87823560208401611a2e565b91505092959194509250565b60008060408385031215611b9b57600080fd5b611ba4836118be565b9150611bb2602084016118be565b90509250929050565b600181811c90821680611bcf57607f821691505b602082108103610e3457634e487b7160e01b600052602260045260246000fd5b86815260a060208201528460a0820152848660c0830137600060c08683018101919091526001600160a01b0394909416604082015260608101929092526080820152601f909201601f19169091010192915050565b6020808252602e908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526d1c881b9bdc88185c1c1c9bdd995960921b606082015260800190565b838152606060208201526000611cab606083018561187f565b905060018060a01b0383166040830152949350505050565b600060208284031215611cd557600080fd5b815167ffffffffffffffff811115611cec57600080fd5b8201601f81018413611cfd57600080fd5b8051611d0b611a3c82611a06565b818152856020838501011115611d2057600080fd5b611d31826020830160208601611853565b95945050505050565b60008251611d4c818460208701611853565b9190910192915050565b60008351611d68818460208801611853565b835190830190611d7c818360208801611853565b01949350505050565b7f7b226e616d65223a20224461696c792043616e766173222c202264657363726981527f7074696f6e223a202261206461696c792063616e766173222c2022696d616765602082015263111d101160e11b604082015260008351611df0816044850160208801611853565b6d111610113934b33324b2111d101160911b6044939091019283015250605281019190915261227d60f01b6072820152607401919050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000815260008251611e6081601d850160208701611853565b91909101601d0192915050565b6000815260008251611e86816001850160208701611853565b9190910160010192915050565b634e487b7160e01b600052601160045260246000fd5b600082821015611ebb57611ebb611e93565b500390565b60008219821115611ed357611ed3611e93565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b600082611f4757634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615611f6657611f66611e93565b500290565b606360f81b815260e083901b6001600160e01b03191660018201526880600e6000396000f360b81b60058201528151600090611fae81600e850160208701611853565b91909101600e019392505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611fef9083018461187f565b9695505050505050565b60006020828403121561200b57600080fd5b81516115278161180756fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa164736f6c634300080d000a";

type DailyCanvasConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DailyCanvasConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DailyCanvas__factory extends ContractFactory {
  constructor(...args: DailyCanvasConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DailyCanvas> {
    return super.deploy(overrides || {}) as Promise<DailyCanvas>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DailyCanvas {
    return super.attach(address) as DailyCanvas;
  }
  override connect(signer: Signer): DailyCanvas__factory {
    return super.connect(signer) as DailyCanvas__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DailyCanvasInterface {
    return new utils.Interface(_abi) as DailyCanvasInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DailyCanvas {
    return new Contract(address, _abi, signerOrProvider) as DailyCanvas;
  }
}
